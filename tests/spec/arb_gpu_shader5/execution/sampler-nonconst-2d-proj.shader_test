[require]
GLSL >= 1.50
GL_ARB_gpu_shader5

[vertex shader]
#version 150
in vec4 piglit_vertex;
out vec4 texcoords;

void main()
{
	gl_Position = piglit_vertex;
	texcoords = (piglit_vertex + 1.0) / 2.0;
}

[fragment shader]
#version 150
#extension GL_ARB_gpu_shader5: enable
in vec4 texcoords;

/* The idea is that the tex array doesn't come first (and so 'other' must get
 * some sort of usage), and we also want to ensure that the index is actually
 * respected.
 */
uniform sampler2D other;
uniform sampler2D tex[3];
uniform int n;

void main()
{
	gl_FragColor = textureGrad(tex[n], texcoords.xy, vec2(0), vec2(0)) +
		texture(other, texcoords.xy) * 0.00000000001;
}

[test]
uniform int other 2
uniform int tex[0] 3
uniform int tex[1] 1
uniform int tex[2] 4
uniform int n 1

texture rgbw 1 (8, 8)
texture checkerboard 2 0 (8, 8) (0.0, 0.0, 0.0, 0.0) (1.0, 1.0, 0.0, 0.0)
texparameter 2D min linear
texture checkerboard 3 0 (8, 8) (0.0, 0.0, 0.0, 0.0) (0.0, 1.0, 1.0, 0.0)
texparameter 2D min linear
texture checkerboard 4 0 (8, 8) (0.0, 0.0, 0.0, 0.0) (1.0, 0.0, 1.0, 0.0)
texparameter 2D min linear

draw rect -1 -1 2 2
relative probe rgb (0.25, 0.25) (1.0, 0.0, 0.0)
relative probe rgb (0.75, 0.25) (0.0, 1.0, 0.0)
relative probe rgb (0.25, 0.75) (0.0, 0.0, 1.0)
relative probe rgb (0.75, 0.75) (1.0, 1.0, 1.0)
