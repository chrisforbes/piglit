# Test reading of tessellation levels in tessellation evaluation shader
# with isolines.
# Note that for this test we fill the entire screen with lines.
#
# From the ARB_tessellation_shader spec (Section 2.X.3.2, Tessellation
#                                        Evaluation Shader Inputs):
#
#       Tessellation level values loaded in these variables will be prior to
#       the clamping and rounding operations performed by the primitive
#       generator as described in Section 2.X.2.  For triangular tessellation,
#       gl_TessLevelOuter[3] and gl_TessLevelInner[1] will be undefined.  For
#       isoline tessellation, gl_TessLevelOuter[2], gl_TessLevelOuter[3], and
#       both values in gl_TessLevelInner[] are undefined.
#
[require]
GLSL >= 1.50
GL_ARB_tessellation_shader


[vertex shader]
in vec4 vertex;

void main()
{
	gl_Position = vertex;
}


[tessellation control shader]
#extension GL_ARB_tessellation_shader: require
layout(vertices = 3) out;

void main() {
	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;

	gl_TessLevelOuter = float[4](50.0, 65.5, -1.0, -2.0);
	gl_TessLevelInner = float[2](-3.0, -4.0);
}


[tessellation evaluation shader]
#extension GL_ARB_tessellation_shader: require
layout(isolines) in;

out vec4 vert_color;

void main() {
	const vec4 green = vec4(0.0, 1.0, 0.0, 1.0);
	const vec4 red = vec4(1.0, 0.0, 0.0, 1.0);
	float half_pixel = 1.0 / 250.0;

	vec4 pos0 = gl_in[0].gl_Position;
	pos0.y += half_pixel;
	vec4 posx = gl_in[1].gl_Position;
	posx.y += half_pixel;
	vec4 posy = gl_in[2].gl_Position;
	posy.y += half_pixel;
	gl_Position = pos0
	            + (posx - pos0) * gl_TessCoord[0]
	            + (posy - pos0) * gl_TessCoord[1];

	vert_color = green;
	if (gl_TessLevelOuter[0] != 50.0 ||
	    gl_TessLevelOuter[1] != 65.5)
		vert_color = red;
}


[fragment shader]
in vec4 vert_color;
void main()
{
	gl_FragColor = vert_color;
}

[vertex data]
vertex/float/2
-1.0 -1.0
 1.0 -1.0
-1.0 -0.6
-1.0 -0.6
 1.0 -0.6
-1.0 -0.2
-1.0 -0.2
 1.0 -0.2
-1.0  0.2
-1.0  0.2
 1.0  0.2
-1.0  0.6
-1.0  0.6
 1.0  0.6
-1.0  1.0

[test]
draw arrays GL_PATCHES 0 15
probe all rgba 0.0 1.0 0.0 1.0
